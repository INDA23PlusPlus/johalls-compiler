<digit> ::= [0-9]
<letter> ::= [A-Z] | [a-z]
<whitespace> ::= " " | "\t" | "\n" | "\r"
<w> ::= <whitespace>

<arithmetic_operator> ::= "+" | "*" | "/" | "-"
<comparison_operator> ::= "==" | "!=" | ">" | ">=" | "<" | "<="

<binary_logical_operator> ::= "&&" | "||"
<unary_logical_operator> ::= "!"

<binary_bitwise_operator> ::= "^" | "|" | "&"
<unary_bitwise_operator> ::= "~"

<unary_operator> ::= <unary_logical_operator> | <unary_bitwise_operator>
<binary_operator> ::= <arithmetic_operator> | <binary_logical_operator> | <binary_bitwise_operator> | <comparison_operator>

<parameter_list> ::= "(" <w>* (<expr> <w>* ("," <w>* <expr> <w>*)* <w>*)? ")"
<function_call> ::= <identifier> <w>* <parameter_list>
<expr> ::= <expr> <w>* <binary_operator> <w>* <expr> | <unary_operator> <expr> | "(" <expr> ")" | <identifier> | <integer> | <function_call>
<identifier> ::= <letter> | "_" | <identifier> <digit> | <identifier> "_" | <identifier> <letter>

<integer> ::= <digit>+

<if> ::= "if" <w>+ <expr> <w>* <block>
<else> ::= "else" <w>* <block>
<conditional> ::= <if> <w>* | <if> <w>* <else>

<declaration> ::= "let " <w>* <identifier> <w>* "=" <w>* <expr> ";"
<ret> ::= "return" <w>+ <expr> <w>* ";"
<statement> ::= <conditional> | <ret> | <expr> <w>* ";"
<block> ::= "{" <w>* (<statement> <w>*)* "}" | <statement>

<parameter_list_decl> ::= "(" <w>* (<identifier> <w>* ("," <w>* <identifier> <w>*)* <w>*)? ")"
<function> ::= "fn" <w>+ <identifier> <w>* <parameter_list_decl> <w>* <block>

<program> ::= <w>* (<function> <w>*)*